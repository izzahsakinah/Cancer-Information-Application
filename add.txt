 <TouchableOpacity onPress={() => 
                        navigation.navigate("Home", {
                            param1: item.image,
                            title:item.title,
                        })} >

    style={styles.backBackgroundImage} 
onPress{() => onBackPressed()}>
<Entyponame="chevron-left" size={32} color={colors.white} />


---------------------------------------------------------------------------------
QUIZ.JS
---------------------------------------------------------------------------------
import React from 'react';
import {View, Text, StyleSheet, Dimensions, ImageBackground, ScrollView} from 'react-native';
import colors from '../assets/colors/colors';
import quiz1 from '../assets/images/quiz1.jpg';
import quiz2 from '../assets/images/quiz2.jpg';
import quiz3 from '../assets/images/quiz3.png';


const height = Dimensions.get('window').height;

const Quiz =({ navigation }) => {
  return (
    <View style = {styles.container}>
      <ScrollView>
        <View style={styles.Introduction}>
        <ImageBackground source={quiz1} style={styles.firstImageWrapper}>
            <Text style={styles.quizText}>Introduction to Cancer</Text>
        </ImageBackground>
        </View>

        <View style={styles.Nano}>
        <ImageBackground source={quiz2} style={styles.secondImageWrapper}>
            <Text style={styles.quizText}>Application of Nanotechnology</Text>
        </ImageBackground>
        </View>

        <View style={styles.NanoDrugs} >
        <ImageBackground source={quiz3} style={styles.thirdImageWrapper}>
            <Text style={styles.quizText}>Nano Drugs  Targetting Cancer Therapy</Text>
        </ImageBackground>
        </View>

      </ScrollView>
    </View>
  );
};


const styles = StyleSheet.create({ 

  container: { 
    flex: 1, 
    height: height,
    backgroundColor:'#ba55d3',
  },
  Introduction: { 
    top: 80, 
    left: 40,    
    marginBottom: 20,
  },
  firstImageWrapper: {
    width: 280, 
    height: 110,         
    borderRadius: 15,
    overflow: 'hidden'
  }, 
  Nano: {
    top: 90, 
    left: 40,    
    marginBottom: 20,
  },
  secondImageWrapper: {
    width: 280, 
    height: 110,
    borderRadius: 15,
    overflow: 'hidden'
  },
  NanoDrugs: {
    top: 100, 
    left: 40,
    marginBottom: 200,
  },
  thirdImageWrapper: {    
    width: 280, 
    height: 110,
    borderRadius: 15,
    overflow: 'hidden'
  }, 
  quizText: {
    fontFamily: 'sans-serif-medium',
    fontSize: 18,
    color: colors.black,
    textAlign: 'center',
    top: 20
  },

});

export default Quiz;
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
QUIZ.JS

<View>
            <Button title="Go Intro" onPress= {()=> navigation.navigate("QuizNano")}></Button>
            <Button title="Go Drugs" onPress= {()=> navigation.navigate("QuizDrugs")}></Button>

                    <View style={styles.quizTopicsWrapper}>
                        <Text style={styles.quizTopicsText}> 
                       Choose Topic
                        </Text>
                    </View>
                    </View>
         
      );
  };


  import React from 'react';
import {View, Text, StyleSheet, Dimensions, ImageBackground, TouchableOpacity} from 'react-native';
import colors from '../assets/colors/colors';
import quizesData from '../assets/data/quizesData';
import { FlatList } from 'react-native-gesture-handler';
import { SafeAreaView } from 'react-native-safe-area-context';

const height = Dimensions.get('window').height;

const Quiz =({ navigation }) => {

  const renderQuizItem = ({item}) => {

  return (
        <View>
          <TouchableOpacity onPress= {()=> navigation.navigate("QuizIntro", {
                item: item  
              })
            }>
           <ImageBackground source={item.image}
                    style={[ styles.quizItem , {
                      marginBottom: item.id === '3' ? 100 : 0
                  }]} 
                    imageStyle={styles.quizImage}
                >
                    <Text style={styles.quizTitle }>
                        {item.name }
                    </Text>
                    <View style={styles.quizDetailsWrapper}>
                    <Text style={styles.quizDetails }>
                        {item.description }
                    </Text>
                    </View>
                </ImageBackground>
            </TouchableOpacity>
           </View>
         );
};

  return (
      <View style={styles.container}>
                    <View style={styles.quizTopicsWrapper}>
                        <Text style={styles.quizTopicsText}> 
                       Choose Topic
                        </Text>
                    </View>
                    <View style={styles.quizItemsWrapper}>
                        <FlatList
                            data={quizesData}
                            renderItem={renderQuizItem}
                            keyExtractor={(item) => item.id}
                        />
                    </View>
          </View>
      );
  };

const styles = StyleSheet.create({ 

  quizItem: {
    width: 250,
    height: 200,
    justifyContent: 'flex-end',
    paddingHorizontal: 30,
    paddingVertical: 30,
    marginLeft : 55,
    top: 50,
  },
  quizImage: { 
    borderRadius: 20,
    marginBottom: 20,

  },
  quizTitle: { 
    //justifyContent: 'flex-end',
    paddingHorizontal: 1,
    paddingVertical: 5,
    color: colors.white,
    //marginRight : 20,
  },
  quizDetailsWrapper:{ 
    //flexDirection: 'column',
    marginTop: 5,
  },
  quizDetails: {
    paddingVertical: 10,
    fontFamily: 'sans-serif-light',
    fontSize: 12,
    color: colors.white,

  },
  container: {
    flex: 1,
    backgroundColor: '#E8DFDF',
    height: height,
    
  },
  quizWrapper: {    
        //marginHorizontal: 20,
        //marginTop: 20,
  },
  quizTopicsWrapper: {
    marginHorizontal: 80,
    //flexDirection: 'column',

  },
  quizTopicsText: {
    fontFamily: 'sans-serif-medium',
    fontSize: 18,
    color: colors.black,
    top: 20, 
    textAlign: 'center',

  },
});

export default Quiz;

===============================================================================
DetailsNano
===============================================================================
<View style={{top: 0, alignSelf: 'center', width: '100%'}}>
  <LinearGradient colors={['#e85d04', '#faa307', '#ffba08']}>
    <ImageBackground style = {[{width: 200, height: 90, left:80, }]}>
      </ImageBackground>
      </LinearGradient> 
         <Text style={styles.descriptionTitle}>Nanotechnology</Text>    
         <View style={{marginVertical: -28, top:20, flexDirection:"row",justifyContent:'space-between',position: 'absolute'}}>
          <TouchableOpacity style={{left: -75}}
              onPress={() => navigation.goBack()}>
                <Entypo name="chevron-left" size={28} color={colors.black} />
            </TouchableOpacity>

          <TouchableOpacity style={{left: 250, position: 'absolute',}}
              onPress={() => navigation.navigate('Nanoparticles')}>
                <Entypo name="chevron-right" size={28} color={colors.black} />
          </TouchableOpacity>
          </View>  
      </View>

======================================================================
source={require('./project/assest/images/test.svg')} />
======================================================================

GITHUB PUSH
git init

git add .

git commit -m " test this app"

git remote add origin https://github.com/username/flutterapp.git

git push or 

git push --set-upstream origin master

=========================================================================
PUSH EXISTING REPO
=========================================================================
git remote add origin https://github.com/queenofcat/Sentiment-Analysis-of-Cyberbullying-Twitter-Detection.git
git branch -M main
git push -u origin main

=========================================================================
CREATE NEW REPO ON CL
=========================================================================
echo "# Sentiment-Analysis-of-Cyberbullying-Twitter-Detection" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/queenofcat/Sentiment-Analysis-of-Cyberbullying-Twitter-Detection.git
git push -u origin main

================================================
git merge origin/main
=================================================
https://stackoverflow.com/questions/5669209/why-do-i-get-error-failed-to-push-some-refs

git checkout master   
git branch main master -f    
git checkout main  
git push origin main -f 
==================================================
const SplashNavigator = ({navigation}) => {
  return (
    <Stack.Navigator>
        {/*<Stack.Screen
          name="Splash"
          component={Splash}
          options={{headerShown : false,
          }}
        /> */}
     </Stack.Navigator>
  );
}

const RegisterNavigator = ({navigation}) => {
  return (
    <Stack.Navigator>
          {/*<Stack.Screen
          name="Register"
          component={Register}
          options={{headerShown : false,
          }}
        />*/}
     </Stack.Navigator>
  )
}

const LoginNavigator = ({navigation}) => {
  return (
    <Stack.Navigator>
        {/*<Stack.Screen
          name="Login"
          component={Login}
          options={{headerShown : false,
          }}
        />*/}
     </Stack.Navigator>
  )
}

const TabNavigator1 = ({navigation}) => {
  return (
    <Stack.Navigator>
       <Stack.Screen
          name="TabNavigator"
          component={TabNavigator}
          options={{headerShown: false}}
        />
     </Stack.Navigator>
  )
}

const HomeNavigator = ({navigation}) => {
  return (
    <Stack.Navigator>
        <Stack.Screen
          name="Home"
          component={Home}
          options={{
            headerShown: false,
            headerLeft: () => (
              <Entypo.Button name="menu" size={25} onPress={() => navigation.openDrawer()}></Entypo.Button>
            )
          }}
          //options={{title: 'My home'}}
        />
     </Stack.Navigator>
  )
}

const AboutNavigator = ({navigation}) => {
  return (
    <Stack.Navigator>
        <Stack.Screen 
          name="About"
          component={About}
          options={{headerShown: false}}
        />
     </Stack.Navigator>
  )
}

const DetailsNavigator = ({navigation}) => {
  return (
    <Stack.Navigator>
       <Stack.Screen
          name="Details"
          component={Details}
          options={{headerShown: false}}
        />
     </Stack.Navigator>
  )
}

const DetailsNanoNavigator = ({navigation}) => {
  return (
    <Stack.Navigator>
       <Stack.Screen
          name="DetailsNano"
          component={DetailsNano}
          options={{headerShown: false}}
        />
     </Stack.Navigator>
  )
}

const NanoparticlesNavigator = ({navigation}) => {
  return (
    <Stack.Navigator>
        {/*<Stack.Screen
          name="Splash"
          component={Splash}
          options={{headerShown : false,
          }}
        /> */}
     </Stack.Navigator>
  )
}

const DetailsMedNavigator = ({navigation}) => {
  return (
    <Stack.Navigator>
       <Stack.Screen
          name="DetailsMed"
          component={DetailsMed}
          options={{headerShown: false}}
        />
     </Stack.Navigator>
  )
}

const QuizIntroNavigator = ({navigation}) => {
  return (
    <Stack.Navigator>
         <Stack.Screen
          name="QuizIntro"
          component={QuizIntro}
          options={{headerShown: false}}
        />
     </Stack.Navigator>
  )
}

const QuizNanoNavigator = ({navigation}) => {
  return (
    <Stack.Navigator>
        <Stack.Screen
          name="QuizNano"
          component={QuizNano}
          options={{headerShown: false}}
        />
     </Stack.Navigator>
  )
}

const QuizMedNavigator = () => {
  return (
    <Stack.Navigator>
        <Stack.Screen
          name="QuizMed"
          component={QuizMed}
          options={{headerShown: false}}
        />
     </Stack.Navigator>
  );
};

const SplashStack = createNativeStackNavigator();
const RegisterStack = createNativeStackNavigator();
const LoginStack = createNativeStackNavigator();
const HomeStack = createNativeStackNavigator();
const AboutStack = createNativeStackNavigator();
const DetailsStack = createNativeStackNavigator();
const DetailsNanoStack = createNativeStackNavigator();
const NanoparticlesStack = createNativeStackNavigator();
const DetailsMedStack = createNativeStackNavigator();
const QuizIntroStack = createNativeStackNavigator();
const QuizNanoStack = createNativeStackNavigator();
const QuizMedStack = createNativeStackNavigator();
const TabNavigatorStack = createNativeStackNavigator();
<Stack.Navigator>
  {/*<Stack.Screen
      name="Splash"
      component={Splash}
      options={{headerShown : false,
      }}
    /> 
    <Stack.Screen
      name="Register"
      component={Register}
      options={{headerShown : false,
      }}
    /> 
    <Stack.Screen
      name="Login"
      component={Login}
      options={{headerShown : false,
      }}
    />*/}
    <Stack.Screen
      name="TabNavigator"
      component={TabNavigator}
      options={{headerShown: false}}
    />
    <Stack.Screen
      name="Home"
      component={Home}
      options={{
        headerShown: false,            
      }}
      //options={{title: 'My home'}}
    />
    <Stack.Screen
      name="Details"
      component={Details}
      options={{headerShown: false}}
    />
    <Stack.Screen
      name="DetailsNano"
      component={DetailsNano}
      options={{headerShown: false}}
    />
    <Stack.Screen
      name="Nanoparticles"
      component={Nanoparticles}
      options={{headerShown: false}}
    />
    <Stack.Screen
      name="DetailsMed"
      component={DetailsMed}
      options={{headerShown: false}}
    />
    <Stack.Screen
      name="QuizIntro"
      component={QuizIntro}
      options={{headerShown: false}}
    />
    <Stack.Screen
      name="QuizNano"
      component={QuizNano}
      options={{headerShown: false}}
    />
    <Stack.Screen
      name="QuizMed"
      component={QuizMed}
      options={{headerShown: false}}
    />
    </Stack.Navigator>

===============================================================================================
Login
===============================================================================================
    export default class Login extends Component {
  
      constructor(props)
      {
        super(props);
        this.state = {useremail:'', userpassword:''};
      }
    
      insertUsers=()=>
      {
        var useremail = this.state.useremail;
        var userpassword = this.state.userpassword;
    
      if((useremail.length==0) || (userpassword==0))
        {
          alert("Plase fill in all required field!");
        }
      else{
    
          var insertAPIURL  = "http://10.0.2.2:80/api/login.php";
    
          var headers = { 
            'Accept': 'application/json',
            'Content-Type': 'application/json',
          };
    
          var data = {
            useremail: useremail,
            userpassword: userpassword
          };
    
          fetch(insertAPIURL, {
            method: 'POST', 
            headers: headers,
            body: JSON.stringify(data)
          }
          )
          .then((Response) => Response.json())
          .then((Response)=>{
            if (Response[0].Message == "Success") {
              console.log("true")
              this.props.navigation.navigate("TabNavigator");
            }
            console.log(data);
          })
          .catch((error)=>{
            console.error("error" + error);
          })
         }
       }
    
      render()
      {

========================================================================================
Register
=========================================================================================

export default class Register extends Component {
  
  constructor(props)
  {
    super(props);
    this.state = {username:'', useremail:'', userpassword:''};
  }

  insertUsers=()=>
  {
    var username  = this.state.username;
    var useremail = this.state.useremail;
    var userpassword = this.state.userpassword;
    var resultEmail = RegExp(/^[_a-z0-9-]+(\.[_a-z0-9-]+)*@[a-z0-9-]+(\.[a-z0-9-]+)*(\.[a-z]{2,3})$/i);

    if((username.length==0) ||  (useremail.length==0) || (userpassword==0))
    {
      alert("Plase fill in all required field!");
    }
    else if (!(resultEmail).test(useremail))
    {
      alert("Invalid Email");
    }
    else if (userpassword.length<3)
    {
       alert("Minimum 4 characters required");
   }else if (!((/[ `!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?~]/).test(userpassword)))
   {
     alert("At least 1 special character");
   }else if (((/[ ]/).test(userpassword)))
   {
     alert("Cannot include space in password");
   }
   else
   {
       var insertAPIURL  = "http://10.0.2.2:80/api/registration.php";

       var headers = { 
         'Accept': 'application/json',
         'Content-Type': 'application/json',
       };
       var data = {
         username: username,
         useremail: useremail,
         userpassword: userpassword
       };

       fetch(insertAPIURL, {
         method: 'POST', 
         headers: headers,
         body: JSON.stringify(data)
       }
       )
       .then((response) => response.json())
       .then((response) => 
         {
           alert(response[0].Message);
           this.props.navigation.navigate("Login"); 
         }
       )
       .catch((error)=>
       {
         alert("Error" + error);
       })
    }
  }

   render()
   {


==================================================================================

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }
    ===============================================================================
    codepush
    
    appcenter codepush release-react -a foxsfames-gmail.com/MyNanoria -d Staging

    ============================================================================
    